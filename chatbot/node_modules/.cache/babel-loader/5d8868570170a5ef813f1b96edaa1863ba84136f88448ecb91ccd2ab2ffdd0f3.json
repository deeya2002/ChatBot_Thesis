{"ast":null,"code":"var _jsxFileName = \"D:\\\\thesis\\\\ChatbotforStudent\\\\chatbot\\\\src\\\\components\\\\free-quiz\\\\Play.js\";\nimport React, { Component, Fragment } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css';\nimport classnames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport Loader from '../common/Loader';\nimport { getFreeQuestions, endFreeQuiz } from '../../actions/quizActions';\nimport isEmpty from '../../validation/is-empty';\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonSound from '../../assets/audio/button-sound.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Play extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDisableButton = () => {\n      if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\n        this.setState({\n          previousButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          previousButtonDisabled: false\n        });\n      }\n      if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\n        this.setState({\n          nextButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          nextButtonDisabled: false\n        });\n      }\n    };\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        document.getElementById('correct-audio').play();\n        setTimeout(() => {\n          this.correctAnswer();\n        }, 500);\n      } else {\n        document.getElementById('wrong-audio').play();\n        setTimeout(() => {\n          this.wrongAnswer();\n        }, 500);\n      }\n      if (this.state.numberOfQuestions === 0) {\n        const questionsArray = Object.keys(this.state.questions).map(i => this.state.questions[i]);\n        this.setState({\n          numberOfQuestions: questionsArray.length\n        });\n      }\n    };\n    this.handleNextButtonClick = e => {\n      if (!this.state.nextButtonDisabled) {\n        this.playButtonSound();\n        if (this.state.nextQuestion !== undefined) {\n          this.setState(prevState => ({\n            currentQuestionIndex: prevState.currentQuestionIndex + 1\n          }), () => {\n            this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n          });\n        }\n      }\n    };\n    this.handlePreviousButtonClick = e => {\n      if (!this.state.previousButtonDisabled) {\n        this.playButtonSound();\n        if (this.state.previousQuestion !== undefined) {\n          this.setState(prevState => ({\n            currentQuestionIndex: prevState.currentQuestionIndex - 1\n          }), () => {\n            this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n          });\n        }\n      }\n    };\n    this.hadleQuitButtonClick = e => {\n      this.playButtonSound();\n      if (window.confirm('Are yoiu sure you want to quit?')) {\n        this.props.history.push('/');\n      }\n    };\n    this.handleLifeline = e => {\n      switch (e.target.id) {\n        case 'fiftyfifty':\n          if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\n            this.handleFiftyFifty();\n            this.setState(prevState => ({\n              fiftyFifty: prevState.fiftyFifty - 1\n            }));\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    this.handleFiftyFifty = () => {\n      const options = document.querySelectorAll('.option');\n      const randomNumbers = [];\n      let indexOfAnswer;\n      options.forEach((option, index) => {\n        if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n          indexOfAnswer = index;\n        }\n      });\n      let count = 0;\n      do {\n        const randomNumber = Math.round(Math.random() * 3);\n        if (randomNumber !== indexOfAnswer) {\n          if (randomNumbers.length < 2) {\n            if (!randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\n              randomNumbers.push(randomNumber);\n              count++;\n            } else {\n              while (true) {\n                const newRandomNumber = Math.round(Math.random() * 3);\n                if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\n                  randomNumbers.push(newRandomNumber);\n                  count++;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      } while (count < 2);\n      options.forEach((option, index) => {\n        if (randomNumbers.includes(index)) {\n          option.style.visibility = 'hidden';\n        }\n      });\n      this.setState({\n        usedFiftyFifty: true\n      });\n    };\n    this.handleHints = () => {\n      if (this.state.hints > 0) {\n        let options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n        options.forEach((option, index) => {\n          if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n            indexOfAnswer = index;\n          }\n        });\n        while (true) {\n          const randomNumber = Math.round(Math.random() * 3);\n          if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\n            options.forEach((option, index) => {\n              if (index === randomNumber) {\n                option.style.visibility = 'hidden';\n                this.setState(prevState => ({\n                  hints: prevState.hints - 1,\n                  previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\n                }));\n              }\n            });\n            break;\n          }\n          if (this.state.previousRandomNumbers.length >= 3) break;\n        }\n      }\n    };\n    this.showOptions = () => {\n      const options = document.querySelectorAll('.option');\n      options.forEach(option => {\n        option.style.visibility = 'visible';\n      });\n      this.setState({\n        usedFiftyFifty: false\n      });\n    };\n    this.correctAnswer = () => {\n      M.toast({\n        html: 'Correct Answer!',\n        classes: 'toast-valid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: 'Wrong Answer!',\n        classes: 'toast-invalid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        if (this.state.nextQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        }\n      });\n    };\n    this.endGame = () => {\n      alert('Quiz has ended!');\n      const quizData = {\n        score: this.state.score,\n        type: this.state.type,\n        numberOfQuestions: this.state.numberOfQuestions,\n        numberOfAnsweredQuestions: this.state.numberOfAnsweredQuestions,\n        correctAnswers: this.state.correctAnswers,\n        wrongAnswers: this.state.wrongAnswers,\n        usedHints: 5 - this.state.hints,\n        usedfiftyFifty: 2 - this.state.fiftyFifty\n      };\n      this.props.endFreeQuiz(quizData, this.props.history);\n    };\n    this.startTimer = () => {\n      // const countDownTime = Date.now() + 900000;\n      const countDownTime = Date.now() + 180000;\n      this.interval = setInterval(() => {\n        const now = new Date();\n        const distance = countDownTime - now;\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        if (distance < 0) {\n          clearInterval(this.interval);\n          this.setState({\n            ...this.state,\n            time: {\n              minutes: 0,\n              seconds: 0\n            }\n          }, () => {\n            this.endGame();\n          });\n        } else {\n          this.setState({\n            ...this.state,\n            time: {\n              seconds,\n              minutes,\n              distance\n            }\n          });\n        }\n      }, 1000);\n    };\n    this.playButtonSound = () => {\n      document.getElementById('button-sound').play();\n    };\n    this.state = {\n      type: '',\n      questions: [],\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 10,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      loading: false,\n      previousButtonDisabled: true,\n      nextButtonDisabled: false,\n      previousRandomNumbers: [],\n      time: {}\n    };\n    this.interval = null;\n  }\n  componentDidMount() {\n    this.props.getFreeQuestions();\n    this.setState({\n      loading: true\n    });\n    this.startTimer();\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!isEmpty(nextProps.quiz)) {\n      this.setState({\n        questions: nextProps.quiz.questions,\n        type: nextProps.quiz.type,\n        numberOfQuestions: nextProps.quiz.numberOfQuestions,\n        loading: false\n      }, () => {\n        this.displayQuestion(this.state.questions);\n        this.handleDisableButton();\n      });\n    }\n  }\n  displayQuestion(questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) {\n    let {\n      currentQuestionIndex\n    } = this.state;\n    if (!isEmpty(this.state.questions)) {\n      questions = this.state.questions;\n      currentQuestion = questions[currentQuestionIndex];\n      nextQuestion = questions[currentQuestionIndex + 1];\n      previousQuestion = questions[currentQuestionIndex - 1];\n      const answer = currentQuestion.answer;\n      this.setState({\n        currentQuestion,\n        nextQuestion,\n        previousQuestion,\n        answer,\n        previousRandomNumbers: []\n      }, () => {\n        this.showOptions();\n        this.handleDisableButton();\n      });\n    }\n  }\n  render() {\n    const {\n      currentQuestion,\n      questions,\n      loading,\n      time\n    } = this.state;\n    let quizContent;\n    if (isEmpty(questions) || loading === true) {\n      quizContent = /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 27\n      }, this);\n    } else {\n      quizContent = /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Helmet, {\n          children: /*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Free Quiz - Instaquiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"correct-audio\",\n            src: correctNotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"wrong-audio\",\n            src: wrongNotification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: \"button-sound\",\n            src: buttonSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lifeline-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: this.handleLifeline,\n                id: \"fiftyfifty\",\n                className: classnames('mdi mdi-set-center mdi-24px lifeline-icon', {\n                  'lifeline-icon-empty': this.state.fiftyFifty === 0\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lifeline\",\n                  children: this.state.fiftyFifty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.state.hints > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: this.handleHints,\n                id: \"hints\",\n                className: classnames('mdi mdi-lightbulb-on mdi-24px lifeline-icon', {\n                  'lifeline-icon-empty': this.state.hints === 0\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lifeline\",\n                  children: this.state.hints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 38\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: this.handleLifeline,\n                id: \"hints\",\n                className: classnames('mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon', {\n                  'lifeline-icon-empty': this.state.hints === 0\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lifeline\",\n                  children: this.state.hints\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [this.state.currentQuestionIndex + 1, \" of \", this.state.numberOfQuestions]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classnames('right valid', {\n                'warning': time.distance <= 120000,\n                'invalid': time.distance < 30000\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-clock-outline mdi-24px\",\n                style: {\n                  position: 'relative',\n                  top: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this), time.minutes, \":\", time.seconds]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionA\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionB\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionC\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: this.handleOptionClick,\n              className: \"option\",\n              children: currentQuestion.optionD\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: classnames('', {\n              'disable': this.state.previousButtonDisabled\n            }),\n            onClick: this.handlePreviousButtonClick,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: '5px'\n              },\n              className: \"mdi mdi-chevron-double-left left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 33\n            }, this), \"Previous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classnames('', {\n              'disable': this.state.nextButtonDisabled\n            }),\n            onClick: this.handleNextButtonClick,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '5px'\n              },\n              className: \"mdi mdi-chevron-double-right right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 33\n            }, this), \"Next\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.hadleQuitButtonClick,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '5px'\n              },\n              className: \"mdi mdi-close right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 33\n            }, this), \"Quit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Free Quiz Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), quizContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }, this);\n  }\n}\nPlay.propTypes = {\n  endFreeQuiz: PropTypes.func.isRequired,\n  getFreeQuestions: PropTypes.func.isRequired,\n  quiz: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  quiz: state.quiz\n});\nexport default connect(mapStateToProps, {\n  endFreeQuiz,\n  getFreeQuestions\n})(withRouter(Play));","map":{"version":3,"names":["React","Component","Fragment","useNavigate","connect","PropTypes","M","classnames","Helmet","Loader","getFreeQuestions","endFreeQuiz","isEmpty","correctNotification","wrongNotification","buttonSound","jsxDEV","_jsxDEV","Play","constructor","props","handleDisableButton","state","previousQuestion","undefined","currentQuestionIndex","setState","previousButtonDisabled","nextQuestion","numberOfQuestions","nextButtonDisabled","handleOptionClick","e","target","innerHTML","toLowerCase","answer","document","getElementById","play","setTimeout","correctAnswer","wrongAnswer","questionsArray","Object","keys","questions","map","i","length","handleNextButtonClick","playButtonSound","prevState","displayQuestion","currentQuestion","handlePreviousButtonClick","hadleQuitButtonClick","window","confirm","history","push","handleLifeline","id","fiftyFifty","usedFiftyFifty","handleFiftyFifty","options","querySelectorAll","randomNumbers","indexOfAnswer","forEach","option","index","count","randomNumber","Math","round","random","includes","newRandomNumber","style","visibility","handleHints","hints","Array","from","previousRandomNumbers","concat","showOptions","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","alert","quizData","type","usedHints","usedfiftyFifty","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","floor","seconds","clearInterval","time","loading","componentDidMount","componentWillUnmount","UNSAFE_componentWillReceiveProps","nextProps","quiz","render","quizContent","fileName","_jsxFileName","lineNumber","columnNumber","children","src","className","onClick","position","top","question","optionA","optionB","optionC","optionD","marginRight","marginLeft","propTypes","func","isRequired","object","mapStateToProps","withRouter"],"sources":["D:/thesis/ChatbotforStudent/chatbot/src/components/free-quiz/Play.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport {  useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport M from 'materialize-css';\r\nimport classnames from 'classnames';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport Loader from '../common/Loader';\r\n\r\nimport { getFreeQuestions, endFreeQuiz } from '../../actions/quizActions';\r\n\r\nimport isEmpty from '../../validation/is-empty';\r\n\r\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\r\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\r\nimport buttonSound from '../../assets/audio/button-sound.mp3';\r\n\r\nclass Play extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            type: '',\r\n            questions: [],\r\n            currentQuestion: {},\r\n            nextQuestion: {},\r\n            previousQuestion: {},\r\n            answer: '',\r\n            numberOfQuestions: 0,\r\n            numberOfAnsweredQuestions: 0,\r\n            currentQuestionIndex: 0,\r\n            score: 0,\r\n            correctAnswers: 0,\r\n            wrongAnswers: 0,\r\n            hints: 10,\r\n            fiftyFifty: 2,\r\n            usedFiftyFifty: false,\r\n            loading: false,\r\n            previousButtonDisabled: true,\r\n            nextButtonDisabled: false,\r\n            previousRandomNumbers: [],\r\n            time: {}\r\n        };\r\n        this.interval = null\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.getFreeQuestions();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        this.startTimer();\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps (nextProps) {\r\n        if (!isEmpty(nextProps.quiz)) {\r\n            this.setState({\r\n                questions: nextProps.quiz.questions,\r\n                type: nextProps.quiz.type,\r\n                numberOfQuestions: nextProps.quiz.numberOfQuestions,\r\n                loading: false\r\n            }, () => {\r\n                this.displayQuestion(this.state.questions);\r\n                this.handleDisableButton();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleDisableButton = () => {\r\n        if (this.state.previousQuestion === undefined || this.state.currentQuestionIndex === 0) {\r\n            this.setState({\r\n                previousButtonDisabled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                previousButtonDisabled: false\r\n            });\r\n        }\r\n\r\n        if (this.state.nextQuestion === undefined || this.state.currentQuestionIndex + 1 === this.state.numberOfQuestions) {\r\n            this.setState({\r\n                nextButtonDisabled: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                nextButtonDisabled: false\r\n            });\r\n        }\r\n    }\r\n\r\n    displayQuestion (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) {\r\n        let { currentQuestionIndex } = this.state;\r\n        if (!isEmpty(this.state.questions)) {\r\n            questions = this.state.questions;\r\n            currentQuestion = questions[currentQuestionIndex];\r\n            nextQuestion = questions[currentQuestionIndex + 1];\r\n            previousQuestion = questions[currentQuestionIndex - 1];\r\n            const answer =  currentQuestion.answer;\r\n            this.setState({\r\n                currentQuestion,\r\n                nextQuestion,\r\n                previousQuestion,\r\n                answer,\r\n                previousRandomNumbers: []\r\n            }, () => {\r\n                this.showOptions();\r\n                this.handleDisableButton();\r\n            });\r\n        }\r\n    }\r\n\r\n    handleOptionClick = (e) => {\r\n        if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n            document.getElementById('correct-audio').play();\r\n            setTimeout(() => {\r\n                this.correctAnswer();\r\n            }, 500);\r\n        } else {\r\n            document.getElementById('wrong-audio').play();\r\n            setTimeout(() => {\r\n                this.wrongAnswer();\r\n            }, 500);\r\n        }\r\n\r\n        if (this.state.numberOfQuestions === 0) {\r\n            const questionsArray = Object.keys(this.state.questions).map(i => this.state.questions[i]);\r\n            this.setState({\r\n                numberOfQuestions: questionsArray.length\r\n            });\r\n        }\r\n    }\r\n\r\n    handleNextButtonClick = (e) => {\r\n        if (!this.state.nextButtonDisabled) {\r\n            this.playButtonSound();\r\n            if (this.state.nextQuestion !== undefined) {\r\n                this.setState((prevState) => ({\r\n                    currentQuestionIndex: prevState.currentQuestionIndex + 1\r\n                }), () => {\r\n                    this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePreviousButtonClick = (e) => {\r\n        if (!this.state.previousButtonDisabled) {\r\n            this.playButtonSound();\r\n            if (this.state.previousQuestion !== undefined) {\r\n                this.setState((prevState) => ({\r\n                    currentQuestionIndex: prevState.currentQuestionIndex - 1\r\n                }), () => {\r\n                    this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    hadleQuitButtonClick = (e) => {\r\n        this.playButtonSound();\r\n        if (window.confirm ('Are yoiu sure you want to quit?')) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    handleLifeline = (e) => {\r\n        switch (e.target.id) {\r\n            case 'fiftyfifty':\r\n                if (this.state.fiftyFifty > 0 && this.state.usedFiftyFifty === false) {\r\n                    this.handleFiftyFifty();\r\n                    this.setState((prevState) => ({\r\n                        fiftyFifty: prevState.fiftyFifty - 1\r\n                    }));\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleFiftyFifty = () => {\r\n        const options = document.querySelectorAll('.option');\r\n        const randomNumbers = [];\r\n        let indexOfAnswer;\r\n\r\n        options.forEach((option, index) => {\r\n            if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n                indexOfAnswer = index;\r\n            }\r\n        });\r\n\r\n        let count = 0;\r\n        do {\r\n            const randomNumber = Math.round(Math.random() * 3);\r\n            if (randomNumber !== indexOfAnswer) {\r\n                if (randomNumbers.length < 2) {\r\n                    if (!randomNumbers.includes(randomNumber) && !randomNumbers.includes(indexOfAnswer)) {\r\n                        randomNumbers.push(randomNumber);\r\n                        count ++;\r\n                    } else {\r\n                        while (true) {\r\n                            const newRandomNumber = Math.round(Math.random() * 3);\r\n                            if (!randomNumbers.includes(newRandomNumber) && newRandomNumber !== indexOfAnswer) {\r\n                                randomNumbers.push(newRandomNumber);\r\n                                count ++;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } while (count < 2);\r\n            options.forEach((option, index) => {\r\n            if (randomNumbers.includes(index)) {\r\n                option.style.visibility = 'hidden';\r\n            }\r\n        });\r\n        this.setState({\r\n            usedFiftyFifty: true\r\n        });\r\n    }\r\n\r\n    handleHints = () => {\r\n        if (this.state.hints > 0) {\r\n            let options = Array.from(document.querySelectorAll('.option'));\r\n            let indexOfAnswer;\r\n\r\n\r\n            options.forEach((option, index) => {\r\n                if (option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\r\n                    indexOfAnswer = index;\r\n                }\r\n            });\r\n\r\n            while (true) {\r\n                const randomNumber = Math.round(Math.random() * 3);\r\n                if (randomNumber !== indexOfAnswer && !this.state.previousRandomNumbers.includes(randomNumber)) {\r\n                    options.forEach((option, index) => {\r\n                        if (index === randomNumber) {\r\n                            option.style.visibility = 'hidden';\r\n                            this.setState((prevState) => ({\r\n                                hints: prevState.hints - 1,\r\n                                previousRandomNumbers: prevState.previousRandomNumbers.concat(randomNumber)\r\n                            }));\r\n                        }\r\n                    });\r\n                    break;\r\n                }\r\n\r\n                if (this.state.previousRandomNumbers.length >= 3) break;\r\n            }\r\n        }\r\n    }\r\n\r\n    showOptions = () => {\r\n        const options = document.querySelectorAll('.option');\r\n        options.forEach(option => {\r\n            option.style.visibility = 'visible';\r\n        });\r\n        this.setState({\r\n            usedFiftyFifty: false\r\n        });\r\n    };\r\n\r\n    correctAnswer = () => {\r\n        M.toast({\r\n            html: 'Correct Answer!',\r\n            classes: 'toast-valid',\r\n            displayLength: 1500\r\n        });\r\n        this.setState((prevState) => ({\r\n            score: prevState.score + 1,\r\n            correctAnswers: prevState.correctAnswers + 1,\r\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\r\n        }), () => {\r\n            if (this.state.nextQuestion === undefined) {\r\n                this.endGame();\r\n            } else {\r\n                this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            }\r\n        });\r\n    }\r\n\r\n    wrongAnswer = () => {\r\n        navigator.vibrate(1000);\r\n        M.toast({\r\n            html: 'Wrong Answer!',\r\n            classes: 'toast-invalid',\r\n            displayLength: 1500\r\n        });\r\n        this.setState((prevState) => ({\r\n            wrongAnswers: prevState.wrongAnswers + 1,\r\n            currentQuestionIndex: prevState.currentQuestionIndex + 1,\r\n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\r\n        }), () => {\r\n            if (this.state.nextQuestion === undefined) {\r\n                this.endGame();\r\n            } else {\r\n                this.displayQuestion(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\r\n            }\r\n        });\r\n    }\r\n\r\n    endGame = () => {\r\n        alert('Quiz has ended!');\r\n        const quizData = {\r\n            score: this.state.score,\r\n            type: this.state.type,\r\n            numberOfQuestions: this.state.numberOfQuestions,\r\n            numberOfAnsweredQuestions: this.state.numberOfAnsweredQuestions,\r\n            correctAnswers: this.state.correctAnswers,\r\n            wrongAnswers: this.state.wrongAnswers,\r\n            usedHints: 5 - this.state.hints,\r\n            usedfiftyFifty: 2 - this.state.fiftyFifty,\r\n        };\r\n\r\n        this.props.endFreeQuiz(quizData, this.props.history)\r\n    }\r\n\r\n    startTimer = () => {\r\n        // const countDownTime = Date.now() + 900000;\r\n        const countDownTime = Date.now() + 180000;\r\n        this.interval = setInterval(() => {\r\n            const now = new Date();\r\n            const distance = countDownTime - now;\r\n\r\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n            if (distance < 0) {\r\n                clearInterval(this.interval);\r\n                this.setState({\r\n                    ...this.state,\r\n                    time: {\r\n                        minutes: 0,\r\n                        seconds: 0\r\n                    }\r\n                }, () => {\r\n                    this.endGame();\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    ...this.state,\r\n                    time: {\r\n                        seconds,\r\n                        minutes,\r\n                        distance\r\n                    }\r\n                });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    playButtonSound = () => {\r\n        document.getElementById('button-sound').play();\r\n    }\r\n\r\n    render () {\r\n        const { currentQuestion, questions, loading, time } = this.state;\r\n\r\n        let quizContent;\r\n\r\n        if (isEmpty(questions) || loading === true) {\r\n            quizContent = <Loader />;\r\n        } else {\r\n            quizContent =  (\r\n                <Fragment>\r\n                    <Helmet><title>Free Quiz - Instaquiz</title></Helmet>\r\n                    <Fragment>\r\n                        <audio id=\"correct-audio\" src={correctNotification}></audio>\r\n                        <audio id=\"wrong-audio\" src={wrongNotification}></audio>\r\n                        <audio id=\"button-sound\" src={buttonSound}></audio>\r\n                    </Fragment>\r\n                    <div className=\"question\">\r\n                        <div className=\"lifeline-container\">\r\n                            <p>\r\n                                <span\r\n                                    onClick={this.handleLifeline}\r\n                                    id=\"fiftyfifty\"\r\n                                    className={classnames('mdi mdi-set-center mdi-24px lifeline-icon', {\r\n                                        'lifeline-icon-empty': this.state.fiftyFifty === 0\r\n                                    })}>\r\n                                        <span className=\"lifeline\">{this.state.fiftyFifty}</span>\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                {this.state.hints > 0\r\n                                    ?\r\n                                     <span\r\n                                        onClick={this.handleHints}\r\n                                        id=\"hints\"\r\n                                        className={classnames('mdi mdi-lightbulb-on mdi-24px lifeline-icon', {\r\n                                            'lifeline-icon-empty': this.state.hints === 0\r\n                                        })}>\r\n                                            <span className=\"lifeline\">{this.state.hints}</span>\r\n                                    </span>\r\n                                    :\r\n                                    <span\r\n                                        onClick={this.handleLifeline}\r\n                                        id=\"hints\"\r\n                                        className={classnames('mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon', {\r\n                                            'lifeline-icon-empty': this.state.hints === 0\r\n                                        })}>\r\n                                            <span className=\"lifeline\">{this.state.hints}</span>\r\n                                    </span>\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                        <p>\r\n                            <span>{this.state.currentQuestionIndex + 1} of {this.state.numberOfQuestions }</span>\r\n                            <span className={classnames('right valid', {\r\n                                'warning' : time.distance <= 120000,\r\n                                'invalid' : time.distance < 30000\r\n                            })}>\r\n                                <span className=\"mdi mdi-clock-outline mdi-24px\" style={{ position: 'relative', top: '2px' }}></span>\r\n                                {time.minutes}:{time.seconds}\r\n                            </span>\r\n                        </p>\r\n                        <h5>{currentQuestion.question}</h5>\r\n                        <div className=\"option-container\">\r\n                            <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\r\n                            <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionB}</p>\r\n                        </div>\r\n                        <div className=\"option-container\">\r\n                            <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\r\n                            <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"buttonContainer\">\r\n                        <button\r\n                            className={classnames('', { 'disable': this.state.previousButtonDisabled })}\r\n                            onClick={this.handlePreviousButtonClick}>\r\n                                <span\r\n                                    style={{ marginRight: '5px' }}\r\n                                    className=\"mdi mdi-chevron-double-left left\">\r\n                                </span>\r\n                            Previous\r\n                        </button>\r\n                        <button\r\n                            className={classnames('', { 'disable': this.state.nextButtonDisabled })}\r\n                            onClick={this.handleNextButtonClick}>\r\n                                <span\r\n                                    style={{ marginLeft: '5px' }}\r\n                                    className=\"mdi mdi-chevron-double-right right\">\r\n                                </span>\r\n                                Next\r\n                            </button>\r\n                        <button\r\n                            onClick={this.hadleQuitButtonClick}>\r\n                                <span\r\n                                    style={{ marginLeft: '5px' }}\r\n                                    className=\"mdi mdi-close right\">\r\n                                </span>\r\n                            Quit\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div id=\"quiz\">\r\n                <h3>Free Quiz Mode</h3>\r\n                {/* {this.state.type ? <h3>{this.state.type}</h3> : <span>No Type found</span>} */}\r\n                {quizContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlay.propTypes = {\r\n    endFreeQuiz: PropTypes.func.isRequired,\r\n    getFreeQuestions: PropTypes.func.isRequired,\r\n    quiz: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz\r\n});\r\n\r\nexport default connect(mapStateToProps, { endFreeQuiz, getFreeQuestions })(withRouter(Play));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}