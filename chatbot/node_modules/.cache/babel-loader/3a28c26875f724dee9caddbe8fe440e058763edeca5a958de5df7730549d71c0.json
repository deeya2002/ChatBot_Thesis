{"ast":null,"code":"import axios from 'axios';\nconst Api = axios.create({\n  baseURL: 'http://localhost:5000',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n});\n\n// configuration for axios\nconst config = {\n  headers: {\n    authorization: `Bearer ${localStorage.getItem('token')}`\n  }\n};\n\n// const token = getToken();\nconsole.log('Token:', config);\n\n// Creating test api\nexport const testApi = () => Api.get('/test');\n// http://localhost:5000//test\n\n//Auth Api for user\n//  Creating register api\nexport const registerApi = data => Api.post('/api/auth/create', data);\n// Create login api\nexport const loginApi = data => Api.post('/api/auth/login', data);\n\n//Journal Api\n// create journal API\nexport const createJournalApi = formData => Api.post('/api/journal/create', formData, config);\n\n// get journal api\nexport const getAllJournalsApi = () => Api.get('/api/journal/getalljournal');\n\n// get single journal api\nexport const getSingleJournalApi = id => Api.get(`/api/journal/me/${id}`);\n\n// get user journal api\nexport const getUserJournalApi = userid => Api.get(`/api/journal/user/${userid}`);\n\n//update journal \nexport const updateJournalApi = (id, formData) => Api.put(`/api/journal/me/${id}`, formData, config);\n\n// delete journal\nexport const deleteJournalApi = id => Api.delete(`/api/journal/me/${id}`, config);\n\n//like journal\nexport const likeJournalApi = data => Api.post(`/api/journal/like`, data);\n\n//unlike journal\nexport const unlikeJournalApi = data => Api.post(`/api/journal/unlike`, data);\n\n//save journal\nexport const saveJournalApi = data => Api.post(`/api/journal/save`, data);\n\n//unsave journal\nexport const unsaveJournalApi = data => Api.post(`/api/journal/unsave`, data);\n\n//unsave journal\nexport const followUserApi = data => Api.post('/api/user/follow', data, config);\n\n//Forget password Apis\nexport const sendEmailApi = data => Api.post('/api/user/resetpassword', data);\nexport const verifyCodeApi = data => Api.post('/api/user/resetcode', data, config);\nexport const updatePasswordApi = data => Api.post('/api/user/updatepassword', data);\n\n//Update User APi\nexport const getSingleUserApi = data => Api.post(`/api/user/getuser`, data);\nexport const updateUserProfileApi = (userid, formData) => Api.put(`/api/user/updateuser/${userid}`, formData, config);\n\n//Search APi\nexport const searchByJournalName = formData => Api.post('/api/journal/searchjournal', formData);\n\n//Comments Api\nexport const createComment = formData => Api.post('/api/comment/create_comment', formData, config);\n\n// get comments API\nexport const getComments = id => Api.get(`/api/comment/get_comments/${id}`);\nexport const deleteComment = id => Api.delete(`/api/comment/delete_comment/${id}`, config);\n\n// create feedback API\nexport const createFeedbackApi = formData => Api.post('/api/feedback/createfeedback', formData, config);","map":{"version":3,"names":["axios","Api","create","baseURL","withCredentials","headers","config","authorization","localStorage","getItem","console","log","testApi","get","registerApi","data","post","loginApi","createJournalApi","formData","getAllJournalsApi","getSingleJournalApi","id","getUserJournalApi","userid","updateJournalApi","put","deleteJournalApi","delete","likeJournalApi","unlikeJournalApi","saveJournalApi","unsaveJournalApi","followUserApi","sendEmailApi","verifyCodeApi","updatePasswordApi","getSingleUserApi","updateUserProfileApi","searchByJournalName","createComment","getComments","deleteComment","createFeedbackApi"],"sources":["D:/thesis/ChatbotforStudent/chatbot/src/apis/Api.jsx"],"sourcesContent":["import axios from 'axios';\r\nconst Api = axios.create({\r\n  baseURL: 'http://localhost:5000',\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data',\r\n  },\r\n});\r\n\r\n// configuration for axios\r\nconst config = {\r\n  headers: {\r\n    authorization: `Bearer ${localStorage.getItem('token')}`,\r\n  },\r\n};\r\n\r\n// const token = getToken();\r\nconsole.log('Token:', config);\r\n\r\n// Creating test api\r\nexport const testApi = () => Api.get('/test');\r\n// http://localhost:5000//test\r\n\r\n//Auth Api for user\r\n//  Creating register api\r\nexport const registerApi = data => Api.post('/api/auth/create', data);\r\n// Create login api\r\nexport const loginApi = data => Api.post('/api/auth/login', data);\r\n\r\n//Journal Api\r\n// create journal API\r\nexport const createJournalApi = formData =>\r\n  Api.post('/api/journal/create', formData, config);\r\n\r\n// get journal api\r\nexport const getAllJournalsApi = () =>\r\n  Api.get('/api/journal/getalljournal');\r\n\r\n// get single journal api\r\nexport const getSingleJournalApi = id =>\r\n  Api.get(`/api/journal/me/${id}`);\r\n\r\n// get user journal api\r\nexport const getUserJournalApi = userid =>\r\n  Api.get(`/api/journal/user/${userid}`);\r\n\r\n//update journal \r\nexport const updateJournalApi = (id, formData) =>\r\n  Api.put(`/api/journal/me/${id}`, formData, config);\r\n\r\n// delete journal\r\nexport const deleteJournalApi = id =>\r\n  Api.delete(`/api/journal/me/${id}`, config);\r\n\r\n//like journal\r\nexport const likeJournalApi = data =>\r\n  Api.post(`/api/journal/like`, data);\r\n\r\n//unlike journal\r\nexport const unlikeJournalApi = data =>\r\n  Api.post(`/api/journal/unlike`, data);\r\n\r\n//save journal\r\nexport const saveJournalApi = data =>\r\n  Api.post(`/api/journal/save`, data);\r\n\r\n//unsave journal\r\nexport const unsaveJournalApi = data =>\r\n  Api.post(`/api/journal/unsave`, data);\r\n\r\n//unsave journal\r\nexport const followUserApi = data =>\r\n  Api.post('/api/user/follow', data, config);\r\n\r\n//Forget password Apis\r\nexport const sendEmailApi = data =>\r\n  Api.post('/api/user/resetpassword', data);\r\n\r\nexport const verifyCodeApi = data =>\r\n  Api.post('/api/user/resetcode', data, config);\r\n\r\nexport const updatePasswordApi = data =>\r\n  Api.post('/api/user/updatepassword', data);\r\n\r\n//Update User APi\r\nexport const getSingleUserApi = data =>\r\n  Api.post(`/api/user/getuser`, data);\r\n\r\n\r\nexport const updateUserProfileApi = (userid, formData) =>\r\n  Api.put(`/api/user/updateuser/${userid}`, formData, config);\r\n\r\n//Search APi\r\nexport const searchByJournalName = formData =>\r\n  Api.post('/api/journal/searchjournal', formData);\r\n\r\n//Comments Api\r\nexport const createComment = formData =>\r\n  Api.post('/api/comment/create_comment', formData, config);\r\n\r\n// get comments API\r\nexport const getComments = id =>\r\n  Api.get(`/api/comment/get_comments/${id}`);\r\n\r\nexport const deleteComment = id =>\r\n  Api.delete(`/api/comment/delete_comment/${id}`, config);\r\n\r\n// create feedback API\r\nexport const createFeedbackApi = formData =>\r\n  Api.post('/api/feedback/createfeedback', formData, config);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}