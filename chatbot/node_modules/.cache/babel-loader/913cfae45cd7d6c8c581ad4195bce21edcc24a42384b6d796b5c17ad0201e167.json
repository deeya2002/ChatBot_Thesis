{"ast":null,"code":"var _jsxFileName = \"D:\\\\thesis\\\\ChatbotforStudent\\\\chatbot\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n// import { registerApi } from '../apis/Api';\n// import '../css/regstyle.css';\n\n// const Register = () => {\n//   const [fullname, setFullName] = useState('');\n//   const [userName, setUserName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const changeFullName = e => {\n//     setFullName(e.target.value);\n//   };\n\n//   const changeUserName = e => {\n//     setUserName(e.target.value);\n//   };\n\n//   const changeEmail = e => {\n//     setEmail(e.target.value);\n//   };\n\n//   const changePassword = e => {\n//     setPassword(e.target.value);\n//   };\n\n//   const changeConfirmPassword = e => {\n//     setConfirmPassword(e.target.value);\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n\n//     if (password !== confirmPassword) {\n//       toast.error(\"Passwords do not match\");\n//       return;\n//     }\n\n//     const data = {\n//       fullname: fullname,\n//       userName: userName,\n//       email: email,\n//       password: password,\n//     };\n\n//     registerApi(data)\n//       .then(res => {\n//         if (res.data.success === true) {\n//           toast.success(res.data.message);\n//           navigate('/login');\n//         } else {\n//           toast.error(res.data.message);\n//         }\n//       })\n//       .catch(err => {\n//         console.log(err);\n//         toast.error('Internal Server Error');\n//       });\n//   };\n\n//   return (\n//     <div className=\"register-background\">\n//       <div className=\"form-container\">\n//         <h1>Register Now</h1>\n//         <p>Register now to start your journey</p>\n\n//         <div className=\"input-group\">\n//           <label htmlFor=\"fullname\">Full Name</label>\n//           <input\n//             type=\"text\"\n//             id=\"fullname\"\n//             name=\"fullname\"\n//             value={fullname}\n//             onChange={changeFullName}\n//             placeholder=\"Full Name\"\n//             required\n//           />\n//         </div>\n//         <div className=\"input-group\">\n//           <label htmlFor=\"username\">Username</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             name=\"username\"\n//             value={userName.toLowerCase().replace(/ /g, \"\")}\n//             onChange={changeUserName}\n//             placeholder=\"Username\"\n//             required\n//           />\n//         </div>\n//         <div className=\"input-group\">\n//           <label htmlFor=\"emaill\">Email</label>\n//           <input\n//             type=\"text\"\n//             id=\"emaill\"\n//             name=\"email\"\n//             value={email.toLowerCase().replace(/ /g, \"\")}\n//             onChange={changeEmail}\n//             placeholder=\"Email\"\n//             required\n//           />\n//         </div>\n//         <div className=\"input-group\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={changePassword}\n//             placeholder=\"Enter your password\"\n//             required\n//           />\n//         </div>\n//         <div className=\"input-group\">\n//           <label htmlFor=\"confirm-password\">Confirm Password</label>\n//           <input\n//             type=\"password\"\n//             id=\"confirm-password\"\n//             name=\"confirmPassword\"\n//             value={confirmPassword}\n//             onChange={changeConfirmPassword}\n//             placeholder=\"Confirm Password\"\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" onClick={handleSubmit}>Sign Up</button>\n//         <p>Already have an account? <Link to=\"/login\">Sign In</Link></p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Register;\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { registerApi } from '../apis/Api';\nimport '../css/regstyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const changeFirstName = e => setFirstName(e.target.value);\n  const changeLastName = e => setLastName(e.target.value);\n  const changeUserName = e => setUserName(e.target.value);\n  const changeEmail = e => setEmail(e.target.value);\n  const changePhone = e => setPhone(e.target.value);\n  const changePassword = e => setPassword(e.target.value);\n  const changeConfirmPassword = e => setConfirmPassword(e.target.value);\n  const validateFirstName = name => /^[A-Za-z\\s]+$/.test(name);\n  const validateLastName = name => /^[A-Za-z\\s]+$/.test(name);\n  const validateUsername = username => /^[A-Za-z0-9]+$/.test(username);\n  const validateEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const validatePassword = password => password.length >= 8 && /\\d/.test(password) && /[A-Za-z]/.test(password);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!validateFirstName(firstName)) {\n      toast.error(\"Full name must contain only letters and spaces\");\n      return;\n    }\n    if (!validateLastName(LastName)) {\n      toast.error(\"Full name must contain only letters and spaces\");\n      return;\n    }\n    if (!validateUsername(username)) {\n      toast.error(\"Username must be alphanumeric and contain no spaces\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      toast.error(\"Invalid email format\");\n      return;\n    }\n    if (!validatePassword(password)) {\n      toast.error(\"Password must be at least 8 characters long and contain both letters and numbers\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n    const data = {\n      firstName: firstName,\n      lastName: LastName,\n      username: username,\n      email: email,\n      password: password\n    };\n    registerApi(data).then(res => {\n      if (res.data.success === true) {\n        toast.success(res.data.message);\n        navigate('/login');\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      console.log(err);\n      toast.error('Internal Server Error');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Register now to start your journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullname\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullname\",\n          name: \"fullname\",\n          value: firstName,\n          onChange: changeFirstName,\n          placeholder: \"First Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: username.toLowerCase().replace(/ /g, \"\"),\n          onChange: changeUserName,\n          placeholder: \"Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"emaill\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"emaill\",\n          name: \"email\",\n          value: email.toLowerCase().replace(/ /g, \"\"),\n          onChange: changeEmail,\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phonee\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phonee\",\n          name: \"phonee\",\n          value: email.toLowerCase().replace(/ /g, \"\"),\n          onChange: changePhone,\n          placeholder: \"Phone\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: changePassword,\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm-password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: changeConfirmPassword,\n          placeholder: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"qqLMygcUvF8YbV6cS01M4aJNUQw=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","toast","registerApi","jsxDEV","_jsxDEV","Register","_s","firstName","setFirstName","lastName","setLastName","username","setUserName","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","navigate","changeFirstName","e","target","value","changeLastName","changeUserName","changeEmail","changePhone","changePassword","changeConfirmPassword","validateFirstName","name","test","validateLastName","validateUsername","validateEmail","validatePassword","length","handleSubmit","preventDefault","error","LastName","data","then","res","success","message","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","required","toLowerCase","replace","onClick","to","_c","$RefreshReg$"],"sources":["D:/thesis/ChatbotforStudent/chatbot/src/pages/Register.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { toast } from 'react-toastify';\r\n// import { registerApi } from '../apis/Api';\r\n// import '../css/regstyle.css';\r\n\r\n// const Register = () => {\r\n//   const [fullname, setFullName] = useState('');\r\n//   const [userName, setUserName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [confirmPassword, setConfirmPassword] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const changeFullName = e => {\r\n//     setFullName(e.target.value);\r\n//   };\r\n\r\n//   const changeUserName = e => {\r\n//     setUserName(e.target.value);\r\n//   };\r\n\r\n//   const changeEmail = e => {\r\n//     setEmail(e.target.value);\r\n//   };\r\n\r\n//   const changePassword = e => {\r\n//     setPassword(e.target.value);\r\n//   };\r\n\r\n//   const changeConfirmPassword = e => {\r\n//     setConfirmPassword(e.target.value);\r\n//   };\r\n\r\n//   const handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== confirmPassword) {\r\n//       toast.error(\"Passwords do not match\");\r\n//       return;\r\n//     }\r\n\r\n//     const data = {\r\n//       fullname: fullname,\r\n//       userName: userName,\r\n//       email: email,\r\n//       password: password,\r\n//     };\r\n\r\n//     registerApi(data)\r\n//       .then(res => {\r\n//         if (res.data.success === true) {\r\n//           toast.success(res.data.message);\r\n//           navigate('/login');\r\n//         } else {\r\n//           toast.error(res.data.message);\r\n//         }\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err);\r\n//         toast.error('Internal Server Error');\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-background\">\r\n//       <div className=\"form-container\">\r\n//         <h1>Register Now</h1>\r\n//         <p>Register now to start your journey</p>\r\n\r\n//         <div className=\"input-group\">\r\n//           <label htmlFor=\"fullname\">Full Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"fullname\"\r\n//             name=\"fullname\"\r\n//             value={fullname}\r\n//             onChange={changeFullName}\r\n//             placeholder=\"Full Name\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"input-group\">\r\n//           <label htmlFor=\"username\">Username</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"username\"\r\n//             name=\"username\"\r\n//             value={userName.toLowerCase().replace(/ /g, \"\")}\r\n//             onChange={changeUserName}\r\n//             placeholder=\"Username\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"input-group\">\r\n//           <label htmlFor=\"emaill\">Email</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"emaill\"\r\n//             name=\"email\"\r\n//             value={email.toLowerCase().replace(/ /g, \"\")}\r\n//             onChange={changeEmail}\r\n//             placeholder=\"Email\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"input-group\">\r\n//           <label htmlFor=\"password\">Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             value={password}\r\n//             onChange={changePassword}\r\n//             placeholder=\"Enter your password\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"input-group\">\r\n//           <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"confirm-password\"\r\n//             name=\"confirmPassword\"\r\n//             value={confirmPassword}\r\n//             onChange={changeConfirmPassword}\r\n//             placeholder=\"Confirm Password\"\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\" onClick={handleSubmit}>Sign Up</button>\r\n//         <p>Already have an account? <Link to=\"/login\">Sign In</Link></p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { registerApi } from '../apis/Api';\r\nimport '../css/regstyle.css';\r\n\r\nconst Register = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [username, setUserName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const changeFirstName = e => setFirstName(e.target.value);\r\n  const changeLastName = e => setLastName(e.target.value);\r\n  const changeUserName = e => setUserName(e.target.value);\r\n  const changeEmail = e => setEmail(e.target.value);\r\n  const changePhone = e => setPhone(e.target.value);\r\n  const changePassword = e => setPassword(e.target.value);\r\n  const changeConfirmPassword = e => setConfirmPassword(e.target.value);\r\n\r\n  const validateFirstName = name => /^[A-Za-z\\s]+$/.test(name);\r\n  const validateLastName = name => /^[A-Za-z\\s]+$/.test(name);\r\n  const validateUsername = username => /^[A-Za-z0-9]+$/.test(username);\r\n  const validateEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  const validatePassword = password => password.length >= 8 && /\\d/.test(password) && /[A-Za-z]/.test(password);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!validateFirstName(firstName)) {\r\n      toast.error(\"Full name must contain only letters and spaces\");\r\n      return;\r\n    }\r\n\r\n    if (!validateLastName(LastName)) {\r\n      toast.error(\"Full name must contain only letters and spaces\");\r\n      return;\r\n    }\r\n\r\n    if (!validateUsername(username)) {\r\n      toast.error(\"Username must be alphanumeric and contain no spaces\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      toast.error(\"Invalid email format\");\r\n      return;\r\n    }\r\n\r\n    if (!validatePassword(password)) {\r\n      toast.error(\"Password must be at least 8 characters long and contain both letters and numbers\");\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      firstName: firstName,\r\n      lastName: LastName,\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    registerApi(data)\r\n      .then(res => {\r\n        if (res.data.success === true) {\r\n          toast.success(res.data.message);\r\n          navigate('/login');\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        toast.error('Internal Server Error');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-background\">\r\n      <div className=\"form-container\">\r\n        <h1>Register Now</h1>\r\n        <p>Register now to start your journey</p>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"fullname\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fullname\"\r\n            name=\"fullname\"\r\n            value={firstName}\r\n            onChange={changeFirstName}\r\n            placeholder=\"First Name\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            value={username.toLowerCase().replace(/ /g, \"\")}\r\n            onChange={changeUserName}\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"emaill\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"emaill\"\r\n            name=\"email\"\r\n            value={email.toLowerCase().replace(/ /g, \"\")}\r\n            onChange={changeEmail}\r\n            placeholder=\"Email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"phonee\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phonee\"\r\n            name=\"phonee\"\r\n            value={email.toLowerCase().replace(/ /g, \"\")}\r\n            onChange={changePhone}\r\n            placeholder=\"Phone\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={changePassword}\r\n            placeholder=\"Enter your password\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirm-password\"\r\n            name=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={changeConfirmPassword}\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" onClick={handleSubmit}>Sign Up</button>\r\n        <p>Already have an account? <Link to=\"/login\">Sign In</Link></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}